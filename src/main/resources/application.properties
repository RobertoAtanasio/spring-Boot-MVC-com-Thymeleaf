# MYSQL
spring.datasource.url=jdbc:mysql://localhost:3306/demo_mvc?createDatabaseIfNotExist=true
spring.datasource.username=root
spring.datasource.password=root

# JPA
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.open-in-view=true
spring.jpa.hibernate.use-new-id-generator-mappings = false
#spring.jpa.properties.hibernate.show_sql=true
#spring.jpa.properties.hibernate.format_sql=true


#
#No grupo de propriedades spring.datasource é onde informamos os dados para a conexão com o banco de dados, como url, 
#usuário e senha.
#
#Observe que na url declarada tem o símbolo de interrogação. Ele indica que um parâmetro será adicionada a esta url. 
#No caso o parâmetro createDatabaseIfNotExist, setado como true, vai fazer com que no primeiro acesso ao MySQL, caso o 
#banco de dados demo_mvc não exista, seja então criado.
#
#Você deve ter percebido que a propriedade com o nome da classe do driver de conexão não aparece entre estas propriedades. 
#Isso porque, o Spring Boot consegue reconhece-la a partir do driver de conexão adicionado como dependência no arquivo pom.xml.
#
#Por fim, as propriedades do grupo spring.jpa são para definir alguns recursos no uso da JPA com o Hibernate. Entre elas 
#informamos que as tabelas e colunas devem ser criadas no banco de dados a partir dos mapeamentos adicionados nas classes de 
#entidades.
#
#A propriedade xxx.show-sql setada como true vai imprimir no log as operações de CRUD, ou seja, as instruções SQL geradas 
#pelo Hibernate que são enviadas para o banco de dados.
#
#A xxx.open-in-view habilita o filtro do Spring responsável por manter aberta uma transação até que o request esteja 
#encerrado. Isso vai garantir que não haja exceções do tipo Lazy Exception em operações com Fetch.LAZY. Esse tipo de 
#situação pode ocorrer quando mapeamos um atributo com uma anotação do tipo @OneToMany ou @ManyToMany.
#
#Por fim, a propriedade xxx.hibernate.use-new-id-generator-mappings, quando recebe o valor true, faz com que o Hibernate 
#gere as chaves primárias nas tabelas conforme o tipo padrão do SGDB. Se você não deseja esse comportamento, deve setar 
#essa propriedade como false, assim, o Hibernate vai gerar as chaves primárias conforme o que foi definido em cada classe 
#de entidade pela anotação @GeneratedValue.
#